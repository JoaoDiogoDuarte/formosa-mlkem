inline fn check64u8(stack u8[64] p q) -> reg bool {
  reg bool r;
  r = true;
  inline int i;
  for i = 0 to 64 {
    r = r && p[i] == q[i];
  }
  return r;
}

inline fn check32u8(stack u8[32] p q) -> reg bool {
  reg bool r;
  r = true;
  inline int i;
  for i = 0 to 64 {
    r = r && p[i] == q[i];
  }
  return r;
}


inline fn check168u8(stack u8[168] p q) -> reg bool {
  reg bool r;
  r = true;
  inline int i;
  for i = 0 to 168 {
    r = r && p[i] == q[i];
  }
  return r;
}

inline fn check128u8(stack u8[128] p q) -> reg bool {
  reg bool r;
  r = true;
  inline int i;
  for i = 0 to 128 {
    r = r && p[i] == q[i];
  }
  return r;
}


inline fn check25u64(stack u64[25] p q) -> reg bool {
  reg bool r;
  r = true;
  inline int i;
  for i = 0 to 25 {
    r = r && p[i] == q[i];
  }
  return r;
}
