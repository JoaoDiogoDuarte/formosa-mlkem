#ifndef POLYVEC_DECOMPRESS_HH
#define POLYVEC_DECOMPRESS_HH

#include "params.jahh"

fn polyvec_decompress(reg u64 ap) -> stack u16[KYBER_VECN]
{
  stack u16[KYBER_VECN] r;
  reg u32[5] t;
  reg u32 d;
  reg u64 i j;
  inline int k;

  i = 0;
  j = 0;
  
  while (i < KYBER_VECN)
  {
    for k = 0 to 5
    {
      t[k] = (32u)(u8)[ap + j];
      j += 1;
    }

    d = t[1];
    t[1] >>= 2;
    d &= 0x3;
    d <<= 8;
    t[0] |= d;

    d = t[2];
    t[2] >>= 4;
    d &= 0xf;
    d <<= 6;
    t[1] |= d;

    d = t[3];
    t[3] >>= 6;
    d &= 0x3f;
    d <<= 4;
    t[2] |= d;

    d = t[4];
    d <<= 2;
    t[3] |= d;
    
    for k = 0 to 4
    {
      t[k] *= KYBER_Q;
      t[k] += 512;
      t[k] >>= 10;
      r[(int) i] = t[k];
      i += 1;
    }
  }
  return r;
}

#endif
