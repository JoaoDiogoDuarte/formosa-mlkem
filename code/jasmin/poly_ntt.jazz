export fn poly_ntt_jazz(reg u64 rp, reg u64 zetasp) 
{
  reg u64 len;  
  reg u64 start;
  reg u64 j;
  reg u64 cmp;
  reg u64 offset;
  
  reg u16 zeta;
  reg u16 t;
  reg u16 s;
  reg u16 m;

  len = 128;
  while (len >= 2)
  {
    start = 0;
    while (start < 256)
    {
      zetasp += 2;
      zeta = (u16)[zetasp];
      j = start;
      cmp = start + len;
      while (j < cmp)
      {
        offset = j + len;
        t = (u16)[rp + 2*offset];
        t = fqmul(t, zeta);
        s = (u16)[rp + 2*j];
        m = s;
        m -= t;
        (u16)[rp + 2*offset] = m;
        t += s;
        (u16)[rp + 2*j] = t;
        j += 1;
      }
      start = j + len;
    }
    len >>= 1;
  }

  /*
  j = 0;
  while (j < KYBER_N) 
  {
    t = (u16)[rp + j*2];
    t = barrett_reduce(t);
    (u16)[rp + j*2] = t;
    j += 1;
  }
  */
  poly_reduce(rp);
}
